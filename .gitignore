# Node.js / Next.js
node_modules/
.next/
dist/
out/
build/
coverage/
*.log
.env
.env.local
.env.*.local
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
next-env.d.ts

# Python
__pycache__/
*.pyc
*.pyo
*.pyd
*.egg-info/
*.egg
*.sqlite3
*.db

# Python Virtual Environments
.venv/
venv/
env/
ENV/
.env/ # If you use this name for virtual envs specifically
# If your Python environment folder in python-resume-analyzer has a specific name, add it:
# e.g., python-resume-analyzer/my_python_env/

# Jupyter Notebook
.ipynb_checkpoints

# IDE / Editor specific
.vscode/
.idea/
*.sublime-project
*.sublime-workspace
nbproject/ # NetBeans
*.DS_Store # macOS
Thumbs.db # Windows
ehthumbs.db # Windows
*.swp # Vim
*~ # Backup files

# Operating System files
.DS_Store
Thumbs.db
._*

# Log files
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

# Compiled output
dist
build
out

# Dependency directories
/node_modules/
# If your Python dependencies are installed locally in a specific folder not managed by a venv listed above
# /python-resume-analyzer/dependencies/

# Environment files - .env files should generally not be committed, use .env.example
.env
.env*.local
!.env.example
!.env.production.template
!.env.development.template

# Next.js specific
.next/
next-env.d.ts # Usually auto-generated and can be ignored

# Test coverage
coverage/
.nyc_output/

# Temporary files
*.tmp
*.bak
*.patch

# Optional: If your Conda environment.yml is a generic export and not specific to the project,
# you might choose to ignore it if you primarily use a requirements.txt for the Python part.
# However, if it's curated for the project, it's often better to commit it.
# python-resume-analyzer/environment.yml # Consider if this should be ignored or not